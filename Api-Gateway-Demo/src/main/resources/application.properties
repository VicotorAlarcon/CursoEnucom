spring.application.name=Api-Gateway-Demo

server.port:8020


#configuración de eureka client
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://localhost:9000/eureka




#Configuracion de los microservicios que controlara api Gateway

#Micro servicio clientes
#http://localhost:8013/Clientes


spring.cloud.gateway.routes[0].uri=http://localhost:8013
spring.cloud.gateway.routes[0].predicates[0]=Path=/Clientes/**

#http://localhost:8010/Productos

spring.cloud.gateway.routes[1].id=PRODUCTOS
spring.cloud.gateway.routes[1].uri=http://localhost:8010
spring.cloud.gateway.routes[1].predicates[0]=Path=/Productos/**

#http://localhost:8012/Proveedores

spring.cloud.gateway.routes[2].id=PROVEEDORES
spring.cloud.gateway.routes[2].uri=http://localhost:8012
spring.cloud.gateway.routes[2].predicates[0]=Path=/Proveedores/**


#http://localhost:8014/Tienda

spring.cloud.gateway.routes[3].id=GESTION-TIENDA
spring.cloud.gateway.routes[3].uri=http://localhost:8014
spring.cloud.gateway.routes[3].predicates[0]=Path=/Tienda/**

# Ajustar tiempos de heartbeat para evitar problemas de registro
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30

